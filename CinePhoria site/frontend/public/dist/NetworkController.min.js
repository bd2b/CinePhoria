"use strict";var o=function(e,n,t,i){function s(c){return c instanceof t?c:new t(function(p){p(c)})}return new(t||(t=Promise))(function(c,p){function u(l){try{f(i.next(l))}catch(v){p(v)}}function d(l){try{f(i.throw(l))}catch(v){p(v)}}function f(l){l.done?c(l.value):s(l.value).then(u,d)}f((i=i.apply(e,n||[])).next())})};import{isUUID as S}from"./Helpers.js";import{ComptePersonne as A}from"./shared-models/Utilisateur.js";import{ReservationForUtilisateur as y,SeatsForReservation as O}from"./shared-models/Reservation.js";import{handleApiError as E,baseUrl as r}from"./Global.js";import{CinephoriaErrorCode as m,CinephoriaError as h}from"./shared-models/Error.js";function a(e,n,t){return o(this,arguments,void 0,function*(i,s,c,p=!0){try{let u=localStorage.getItem("jwtAccessToken");if(p&&!u)throw console.warn("\u26D4 Aucun token disponible, redirection imm\xE9diate."),new h(m.AUTH_REQUIRED,"Authentification requise et pas de token.");const d={};let f;c instanceof FormData?f=c:(f=c?JSON.stringify(c):void 0,d["Content-Type"]="application/json",d["Accept-Encoding"]="gzip, deflate, br"),p&&(d.Authorization=`Bearer ${u}`);let l=yield fetch(i,{method:s,headers:d,body:f,credentials:p?"include":"same-origin"});if(p&&(l.status===401||l.status===403)){console.warn("\u{1F504} Token expir\xE9, tentative de refresh...");try{if(yield $(),u=localStorage.getItem("jwtAccessToken"),!u)throw console.error("\u{1F534} Refresh \xE9chou\xE9, suppression du token local."),new h(m.TOKEN_REFRESH_FAIL,"Echec du refresh, token expir\xE9 ou invalid\xE9");l=yield fetch(i,{method:s,headers:Object.assign(Object.assign({},d),{Authorization:`Bearer ${u}`}),body:f,credentials:"include"})}catch(v){throw console.error("\u{1F534} Echec du refreshToken :",v),v}}if(!l.ok){const v=yield l.json();throw new h(m.API_ERROR,v.message||"Erreur inconnue")}return l.json()}catch(u){return E(u)}})}function $(){return o(this,void 0,void 0,function*(){try{console.log("\u{1F504} Tentative de refresh du token...");const e=yield fetch(`${r}/api/refresh`,{method:"POST",credentials:"include"});if(!e.ok)throw console.error("\u{1F534} Echec du refresh, suppression du token local"),localStorage.removeItem("jwtAccessToken"),new h(m.TOKEN_REFRESH_FAIL,"Echec du refresh, token expir\xE9 ou invalid\xE9");const n=yield e.json(),{accessToken:t}=n;localStorage.setItem("jwtAccessToken",t),console.log("Nouveau accessToken obtenu via /api/refresh")}catch(e){throw console.error("\u{1F534} Erreur dans refreshAccessToken :",e),localStorage.removeItem("jwtAccessToken"),e}})}export function loginApi(e,n){return o(this,void 0,void 0,function*(){const t={compte:e,password:n},i=yield fetch(`${r}/api/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),credentials:"include"});if(!i.ok){const p=yield i.json();throw new Error(p.message||"Erreur inconnue")}const c=(yield i.json()).accessToken;localStorage.setItem("jwtAccessToken",c),console.log("Login OK, accessToken stock\xE9, refreshToken dans cookie HttpOnly")})}export function logoutApi(){return o(this,void 0,void 0,function*(){const e=yield fetch(`${r}/api/login/logout`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok){const n=yield e.json();throw new Error(n.message||"Erreur inconnue")}})}export function setReservationApi(e,n,t,i,s){return o(this,void 0,void 0,function*(){const c={email:e,seanceId:n,tarifSeats:t,pmrSeats:i,seatsReserved:s},p=`${r}/api/reservation`,u=yield a(p,"POST",c,!1);let d="";if(S(u.reservationId)||(d+="ReservationID invalide."),S(u.utilisateurId)||(d+="UtilisateurId invalide."),u.statut==="NA"&&(d="Une erreur s'est produite c\xF4t\xE9 serveur (NA)."),u.utilisateurId.startsWith("Erreur")&&(d+=" Erreur utilisateur : "+u.utilisateurId),u.reservationId.startsWith("Erreur")&&(d+=" Erreur reservation : "+u.reservationId),d!=="")throw new Error(d);return u})}export function confirmUtilisateurApi(e,n,t){return o(this,void 0,void 0,function*(){const i={id:e,password:n,displayName:t},s=`${r}/api/utilisateur/confirmUtilisateur`,c=yield a(s,"POST",i,!1);return console.log("Message retour",c),c})}export function confirmCompteApi(e,n){return o(this,void 0,void 0,function*(){const t={email:e,codeConfirm:n},i=`${r}/api/utilisateur/confirmCompte`,s=yield a(i,"POST",t,!1);return console.log("Message retour",s),s})}export function confirmReserveApi(e,n,t){return o(this,void 0,void 0,function*(){return a(`${r}/api/reservation/confirm`,"POST",{reservationId:e,utilisateurId:n,seanceId:t})})}export function setStateReservationApi(e,n){return o(this,void 0,void 0,function*(){return a(`${r}/api/reservation/setstate`,"POST",{reservationId:e,stateReservation:n})})}export function setEvaluationReservationApi(e,n,t,i){return o(this,void 0,void 0,function*(){const s=i?"true":"false";return a(`${r}/api/reservation/setevaluation`,"POST",{reservationId:e,note:n,evaluation:t,isEvaluationMustBeReview:s})})}export function cancelReserveApi(e){return o(this,void 0,void 0,function*(){const n={reservationId:e},t=`${r}/api/reservation/cancel`,i=yield a(t,"POST",n,!1);return console.log("Message retour",i),i})}export function profilApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/utilisateur/${e}`,t=yield a(n,"GET",null);if(!Array.isArray(t))throw new Error("La r\xE9ponse de l\u2019API n\u2019est pas un tableau.");return t.map(i=>new A(i))})}export function getReservationApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/reservation/id/${e}`,t=yield a(n,"GET",void 0,!1);if(!Array.isArray(t))throw new Error("La r\xE9ponse de l\u2019API n\u2019est pas un tableau.");const i=t.map(s=>new y(s));return console.log("reservations = ",i),i})}export function getSeatsBookedApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/seances/seats/${e}`,t=yield a(n,"GET",void 0,!1);return console.log("Liste des sieges = ",t),t})}export function getSeancesByIdApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/seances/seances?ids=${e}`,t=yield a(n,"GET",void 0,!1);return console.log("Liste des s\xE9ances = ",t),t})}export function getPlacesReservationApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/reservation/seats/id/${e}`,t=yield a(n,"GET",void 0,!1);if(!Array.isArray(t))throw new Error("La r\xE9ponse de l\u2019API n\u2019est pas un tableau.");const i=t.map(s=>new O(s));return console.log("places = ",i),i})}export function isLogged(){return o(this,void 0,void 0,function*(){const e=`${r}/api/login/isLogged`;return yield a(e,"GET",void 0)})}export function getReservationForUtilisateur(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/reservation/${e}`,t=yield a(n,"GET",null);if(!Array.isArray(t))throw new Error("La r\xE9ponse de l\u2019API n\u2019est pas un tableau.");return t.map(i=>new y(i))})}export function sendMailApi(e){return o(this,void 0,void 0,function*(){const n={mailInput:e};console.log(n);const t=`${r}/api/mail/sendmailcontact`,i=yield a(t,"POST",n,!1);return console.log("Message retour",i),i})}export function getReservationQRCodeApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/reservation/qrcodeimage/${e}`,t=yield a(n,"GET",void 0,!0),i=new Uint8Array(t.qrCodeFile),s=btoa(String.fromCharCode(...i)),c=document.createElement("img");return c.src=`data:${t.contentType};base64,${s}`,c.alt="QR Code",document.body.appendChild(c),c})}export function askResetPwdApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/utilisateur/askresetpwd`,t={email:e};console.log(t);const i=yield a(n,"POST",t,!1);return console.log("Message retour",i),i})}export function resetPwdApi(e,n,t){return o(this,void 0,void 0,function*(){const i=`${r}/api/utilisateur/resetpwd`,s={email:e,codeConfirm:n,newPassword:t};console.log(s);const c=yield a(i,"POST",s,!1);return console.log("Message retour",c),c})}export function filmsCreateApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/films`;return yield a(n,"POST",e,!0)})}export function filmsSelectApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/films/${e}`;return yield a(n,"GET",void 0,!0)})}export function filmsUpdateApi(e,n){return o(this,void 0,void 0,function*(){const t=`${r}/api/films/${e}`;return yield a(t,"PUT",n,!0)})}export function filmsDeleteApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/films/${e}`;return yield a(n,"DELETE",void 0,!0)})}export function filmsSelectAllApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/films`;return yield a(e,"GET",void 0,!1)})}export function createAfficheApi(e,n,t,i){return o(this,void 0,void 0,function*(){const s=new FormData;return s.append("filmId",e),s.append("imageFile",n),s.append("resolution",t.toString()),s.append("contentType",i),a(`${r}/api/films/affiche`,"POST",s,!1)})}export function getAfficheApi(e){return o(this,void 0,void 0,function*(){return a(`${r}/api/films/affiche/${e}`,"GET",void 0,!1)})}export function getAllAffichesApi(){return o(this,void 0,void 0,function*(){return a(`${r}/api/films/affiche`,"GET",void 0,!1)})}export function updateAfficheApi(e,n,t,i){return o(this,void 0,void 0,function*(){const s=new FormData;return n&&s.append("imageFile",n),t&&s.append("resolution",t.toString()),i&&s.append("contentType",i),a(`${r}/api/films/affiche/${e}`,"PUT",s,!1)})}export function deleteAfficheApi(e){return o(this,void 0,void 0,function*(){return a(`${r}/api/films/affiche/${e}`,"DELETE",void 0,!1)})}export function sallesCreateApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/salles`;return yield a(n,"POST",e,!0)})}export function sallesSelectApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/salles/${e}`;return yield a(n,"GET",void 0,!0)})}export function sallesSelectCinemaApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/salles/cinema/${e}`;return yield a(n,"GET",void 0,!0)})}export function sallesUpdateApi(e,n){return o(this,void 0,void 0,function*(){const t=`${r}/api/salles/${e}`;return yield a(t,"PUT",n,!0)})}export function sallesDeleteApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/salles/${e}`;return yield a(n,"DELETE",void 0,!0)})}export function sallesSelectAllApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/salles`;return yield a(e,"GET",void 0,!0)})}export function seancesseulesCreateApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/seancesseules`;return yield a(n,"POST",e,!0)})}export function seancesseulesSelectApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/seancesseules/${e}`;return yield a(n,"GET",void 0,!0)})}export function seancesseulesUpdateApi(e,n){return o(this,void 0,void 0,function*(){const t=`${r}/api/seancesseules/${e}`;return yield a(t,"PUT",n,!0)})}export function seancesseulesDeleteApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/seancesseules/${e}`;return yield a(n,"DELETE",void 0,!0)})}export function seancesseulesSelectAllApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/seancesseules`;return yield a(e,"GET",void 0,!0)})}export function seancesDisplayByCinemaApi(e){return o(this,void 0,void 0,function*(){const n=e.map(s=>`"${s}"`).join(","),t=`${r}/api/seances/display/filter?cinemasList=${n}`;return yield a(t,"GET",void 0,!1)})}export function reservationsByCinemaApi(e){return o(this,void 0,void 0,function*(){const n=e.map(s=>`"${s}"`).join(","),t=`${r}/api/reservation/cinema/filter?cinemasList=${n}`;return yield a(t,"GET",void 0,!0)})}export function reservationAvisUpdateApi(e,n){return o(this,void 0,void 0,function*(){console.log(JSON.stringify(n));const t=`${r}/api/reservation/avis/${e}`;return yield a(t,"PUT",n,!0)})}export function employesSelectAllApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/utilisateur/getemployes`;return yield a(e,"GET",void 0,!0)})}export function getEmployeByMatriculeApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/utilisateur/getemploye/${e}`;return yield a(n,"GET",void 0,!0)})}export function employeCreateApi(e){return o(this,arguments,void 0,function*(n,t=""){var i;const s=`${r}/api/utilisateur/createEmploye`,c=new FormData;return c.append("email",n.email),c.append("password",t),n.isAdministrateur&&n.isAdministrateur===1?c.append("isAdministrateur","true"):c.append("isAdministrateur","false"),c.append("firstnameEmploye",n.firstnameEmploye||""),c.append("lastnameEmploye",n.lastnameEmploye||""),c.append("matricule",((i=n.matricule)===null||i===void 0?void 0:i.toString(10))||""),c.append("listCinemas",n.listCinemas||""),yield a(s,"POST",c,!0)})}export function employeUpdateApi(e,n){return o(this,void 0,void 0,function*(){var t;const i=`${r}/api/utilisateur/updateemploye`,s=new FormData;return s.append("email",e.email),s.append("password",n),e.isAdministrateur&&e.isAdministrateur===1?s.append("isAdministrateur","true"):s.append("isAdministrateur","false"),s.append("firstnameEmploye",e.firstnameEmploye||""),s.append("lastnameEmploye",e.lastnameEmploye||""),s.append("matricule",((t=e.matricule)===null||t===void 0?void 0:t.toString(10))||""),s.append("listCinemas",e.listCinemas||""),yield a(i,"PUT",s,!0)})}export function employeDeleteApi(e){return o(this,void 0,void 0,function*(){const n=`${r}/api/utilisateur/deleteemploye/${e}`;return yield a(n,"DELETE",void 0,!0)})}export function getReservationStatsApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/reservation/getreservationstats`;return yield a(e,"GET",void 0,!0)})}export function getVersionApi(){return o(this,void 0,void 0,function*(){const e=`${r}/api/login/version`;return yield a(e,"GET",void 0,!1)})}
